#!/usr/bin/env bash
# Main Anarchy Linux installer script

# Special error exits
# 42 - couldn't write variable

# Set the Anarchy config file location
export ANARCHY_CONFIG_FILE="${HOME}"/etc/anarchy.conf

# Source files and libraries
. "${ANARCHY_CONFIG_FILE}"
. "${TRANSLATION_FILE}"

# Define log file
LOG_FILE="${ANARCHY_LOG_DIRECTORY}/$(date '+%d-%m-%Y')".log
export LOG_FILE

# Source libraries
for library in "${ANARCHY_LIBRARIES_DIRECTORY}"/*; do
    . "${library}"
done

if [ "$(tput lines)" -gt 25 ]; then
    # Run the function 'update_var' from 'variables.sh'
    update_var 'sufficient_screen_size' 'true' || exit 42
fi

main() {
    # Check for root privileges
    if [ "$(id -u)" -ne 0 ]; then
        echo "Error: anarchy requires root privileges"
        echo "       Use: sudo anarchy"
        exit 1
    fi

    log "Started installation"

    . set-keyboard-layout

    # Show wifi connection menu if user is not already connected to the internet
    if ! . check-connection; then
        . connect-to-wifi
    fi

    . update-mirrorlist
    . test-connection
    . install-yay
    . set-locale
    . set-timezone
    . prepare-disks
    . choose-installation-options
    . set-hostname
    . set-password
    #. set-user
    #. add-software
    #. install-base
    #. configure-system -> configure-desktop-additions
    #. add-user
    #. reboot-menu
}

# Prints the usage info if started wth -h
usage() {
    echo -e "Usage: ${color_green} anarchy [options]${color_none}"
    echo -e "${color_green}    -h       ${color_yellow}Display this help message${color_none}"
    echo -e "${color_green}    -k       ${color_yellow}Update pacman keys${color_none}"
    echo -e "${color_green}    -u       ${color_yellow}Update anarchy scripts${color_none}"
    echo -e ""
}

if [ $# -lt 1 ]; then
    # If no parameters were passed, start the installation
    main
else
    while getopts ":kuh" opt; do
        case "${opt}" in
            k) . update-pacman-keys ;;
            u) . update-anarchy ;;
            h) usage ;;
            *) usage; exit 1 ;;
        esac
    done
fi
