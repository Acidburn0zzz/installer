#!/usr/bin/env bash

menu_title="$complete_op_msg"
## Check if system is installed
if "$INSTALLED" ; then
    ## Check if user has installed bootloader, if no promtp to exit to commandline
    if [ "$bootloader" == "$none" ]; then
        if (dialog --yes-button "$yes" --no-button "$no" --yesno "\n$complete_no_boot_msg" 10 60) then
            reset ; exit
        fi
    fi

    ## Begin reboot menu loop
    while (true)
      do
        ## Prompt for user input
        reboot_menu=$(dialog --nocancel --ok-button "$ok" --menu "$complete_msg" 16 60 7 \
            "$reboot0" "-" \
            "$reboot6" "-" \
            "$reboot2" "-" \
            "$reboot1" "-" \
            "$reboot4" "-" \
            "$reboot3" "-" \
            "$reboot5" "-" 3>&1 1>&2 2>&3)

        ## Execute user input
        case "$reboot_menu" in
            "$reboot0")	## Reboot system
                    umount -R "$CHROOT_MOUNT_POINT"
                    reset ; reboot ; exit
            ;;
            "$reboot6")	## Poweroff system
                    umount -R "$CHROOT_MOUNT_POINT"
                    reset ; poweroff ; exit
            ;;
            "$reboot1")	## Unmount system and exit to command line
                    umount -R "$CHROOT_MOUNT_POINT"
                    reset ; exit
            ;;
            "$reboot2")	## Anarchy Chroot function
                    clear
                    echo -e "$arch_chroot_msg"
                    echo "/root" > /tmp/chroot_dir.var
                    anarchy_chroot
                    clear
            ;;
            "$reboot3")	## Edit users
                    menu_enter=true
                    set_user
            ;;
            "$reboot5")	## Software menu
                    menu_enter=true
                    add_software
            ;;
            "$reboot4")	## Show install log
                    clear ; less "$log" clear
            ;;
        esac
    done
else
    ## Warn user install not complete, prompt for reboot
    if (dialog --yes-button "$yes" --no-button "$no" --yesno "$not_complete_msg" 10 60) then
        umount -R "$CHROOT_MOUNT_POINT"
        reset ; reboot ; exit
    fi
fi