#!/usr/bin/env bash

while (true); do
        menu_title="$user_op_msg"
        ## Create main user dialog menu from users in $tmp_passwd include root user
        user=$(dialog --extra-button --extra-label "$edit" --ok-button "$new_user" --cancel-button "$done_msg" --menu "$user_menu_msg" 13 55 4 \
            $(while IFS= read -r i ; do
                echo "$i $(<"$tmp_passwd" cut -d: -f1,2 | grep -w $i | cut -d: -f2)"
            done <<<"$(sort "$tmp_passwd" | cut -d: -f1)") \
            "root" "$root_sh" 3>&1 1>&2 2>&3)

        ## Check exit status of main user dialog menu
        case "$?" in
            1)	## if user selects cancel
                break
            ;;
            0)	## if user selects add new user
                while (true)
                  do
                    ## prompt user for username
                    user=$(dialog --cancel-button "$cancel" --ok-button "$ok" --inputbox "\n$user_msg1" 12 55 "" 3>&1 1>&2 2>&3)

                    if [ "$?" -gt "0" ]; then
                        break
                    elif [ -z "$user" ]; then
                        dialog --ok-button "$ok" --msgbox "\n$user_err_msg2" 10 60
                    elif (grep "^$user:" "$tmp_passwd" &>/dev/null); then
                        dialog --ok-button "$ok" --msgbox "\n$user_err_msg1" 10 60
                    elif (<<<"$user" grep "^[0-9]\|[A-Z\[\$\!\'\"\`\\|%&#@()_-+=<>~;:/?.,^{}]\|]" &> /dev/null); then
                        dialog --ok-button "$ok" --msgbox "\n$user_err_msg" 10 60
                    else
                        while (true)
                          do
                            full_user=$(dialog --cancel-button "$cancel" --ok-button "$ok" --inputbox "\n$user_msg2" 12 55 3>&1 1>&2 2>&3)
                            if [ "$?" != "0" ]; then
                                break
                            elif (<<<"$full_user" grep "," &> /dev/null) then
                                dialog --ok-button "$ok" --msgbox "\n$fulluser_err_msg" 10 60
                            elif $(cut -d: -f1,4 <"$tmp_passwd" | grep -w "$user" | cut -d: -f2 | grep -w "$full_user"); then
                                dialog --ok-button "$ok" --msgbox "\n$fulluser_err_msg1" 10 60
                            else
                                set_password
                                echo "$(date -u "+%F %H:%M") : Added user: $user" >> "$log"

                                if (dialog --yes-button "$yes" --no-button "$no" --yesno "\n$sudo_var" 10 60) then
                                    sudo_user=yes
                                else
                                    sudo_user=no
                                fi

                                echo "${user}:${sh}:${sudo_user}:${full_user}:${pass_crypt}" >> "$tmp_passwd"

                                if "$menu_enter" ; then
                                    add_user
                                fi
                                break
                            fi
                        done
                        break
                    fi
                done
            ;;
            *)
                while (true)
                  do
                    menu_title="$user_op_msg1"
                    user_sh=$(grep -w "$user" <"$tmp_passwd" | cut -d: -f2)
                    full_user=$(grep -w "$user" <"$tmp_passwd" | cut -d: -f4)
                    pass_crypt=$(grep -w "$user" <"$tmp_passwd" | cut -d: -f5)
                    sudo_user=$(grep -w "$user" <"$tmp_passwd" | cut -d: -f3)
                    if (grep -w "$user" <"$tmp_passwd" | cut -d: -f3 | grep "yes" &>/dev/null); then
                        sudo="$yes"
                    else
                        sudo="$no"
                    fi
                    source "$lang_file"
                    paswd=$(<"$tmp_passwd" grep -v "$user")

                    if [ "$user" == "root" ]; then
                        user_sh="$root_sh"
                        sudo="$yes"
                        full_user="superuser"
                        source "$lang_file"
                        user_edit=$(dialog --ok-button "$select" --cancel-button "$back" --menu "$user_edit_var" 15 55 2 \
                            "$change_pass" "->" \
                            "$change_sh" "->" 3>&1 1>&2 2>&3)
                    else
                        user_edit=$(dialog --ok-button "$select" --cancel-button "$back" --menu "$user_edit_var" 17 65 5 \
                            "$change_pass" "->" \
                            "$change_sh" "->" \
                            "$change_su" "->" \
                            "$change_fn" "->" \
                            "$del_user" "->" 3>&1 1>&2 2>&3)
                    fi

                    case "$user_edit" in
                        "$change_pass")
                            set_password

                            if "$menu_enter" ; then
                                input="$(echo "$pass_crypt" | openssl enc -aes-256-cbc -a -d -salt -pass pass:"$ssl_key")"
                                        (printf "$input\n$input" | arch-chroot "$CHROOT_MOUNT_POINT" passwd "$user") &> /dev/null &
                                        pid=$! pri=0.1 msg="$wait_load \n\n \Z1> \Z2passwd $user\Zn" load
                                echo -e "${paswd}\n${user}:${user_sh}:${sudo_user}:${full_user}:${pass_crypt}" > "$tmp_passwd"
                            elif [ "$user" == "root" ]; then
                                root_crypt="${pass_crypt}"
                            else
                                echo -e "${paswd}\n${user}:${user_sh}:${sudo_user}:${full_user}:${pass_crypt}" > "$tmp_passwd"
                            fi
                        ;;
                        "$change_sh")
                            user_sh=$(dialog --ok-button "$select" --cancel-button "$cancel" --menu "$user_shell_var" 15 55 6 \
                                "bash"  "$shell5" \
                                            "dash"  "$shell0" \
                                            "fish"  "$shell1" \
                                            "mksh"  "$shell2" \
                                            "tcsh"  "$shell3" \
                                            "zsh"   "$shell4" 3>&1 1>&2 2>&3)
                            if [ "$?" -eq "0" ]; then
                                if ! (<<<"$base_install" grep "$user_sh" &>/dev/null); then
                                    base_install+="$user_sh "
                                fi

                                case "$user_sh" in
                                    zsh)	user_sh=/usr/bin/zsh
                                    ;;
                                    fish)	user_sh=/bin/bash
                                    ;;
                                    *)	user_sh=/bin/"$user_sh"
                                    ;;

                                esac
                            fi

                            if "$menu_enter" ; then
                                arch-chroot "$CHROOT_MOUNT_POINT" chsh "$user" -s "$user_sh" &>/dev/null

                                if [ "$user" != "root" ]; then
                                    echo -e "${paswd}\n${user}:${user_sh}:${sudo_user}:${full_user}:${pass_crypt}" > "$tmp_passwd"
                                fi
                            elif [ "$user" == "root" ]; then
                                root_sh="$user_sh"
                            else
                                echo -e "${paswd}\n${user}:${user_sh}:${sudo_user}:${full_user}:${pass_crypt}" > "$tmp_passwd"
                            fi
                        ;;
                        "$change_su")
                            if [ "$sudo" == "$yes" ]; then
                                if (dialog --defaultno --yes-button "$yes" --no-button "$no" --yesno "\n$sudo_var1" 10 60) then
                                    sudo_user=no
                                fi
                            else
                                if (dialog --yes-button "$yes" --no-button "$no" --yesno "\n$sudo_var" 10 60) then
                                    sudo_user=yes
                                fi
                            fi

                            if "$menu_enter" ; then
                                (sed -i '/%wheel ALL=(ALL) ALL/s/^#//' $CHROOT_MOUNT_POINT/etc/sudoers
                                            arch-chroot "$CHROOT_MOUNT_POINT" usermod -a -G wheel "$user") &> /dev/null &
                                            pid=$! pri=0.1 msg="$wait_load \n\n \Z1> \Z2usermod -a -G wheel $user\Zn" load
                            fi

                            echo -e "${paswd}\n${user}:${user_sh}:${sudo_user}:${full_user}:${pass_crypt}" > "$tmp_passwd"
                        ;;
                        "$change_fn")
                            while (true)
                              do
                                full_user=$(dialog --cancel-button "$cancel" --ok-button "$ok" --inputbox "\n$user_msg2" 12 55 3>&1 1>&2 2>&3)
                                if [ "$?" != "0" ]; then
                                    break
                                elif (<<<"$full_user" grep "," &> /dev/null) then
                                    dialog --ok-button "$ok" --msgbox "\n$fulluser_err_msg" 10 60
                                else
                                    if "$menu_enter" ; then
                                        if [ "$full_user" == "" ]; then
                                            full_user="$user"
                                        fi
                                        arch-chroot "$CHROOT_MOUNT_POINT" chfn -f "$full_user" "$user" &>/dev/null
                                    fi

                                    echo -e "${paswd}\n${user}:${user_sh}:${sudo_user}:${full_user}:${pass_crypt}" > "$tmp_passwd"
                                    break
                                fi
                            done
                        ;;
                        "$del_user")
                            if (dialog --defaultno --yes-button "$yes" --no-button "$no" --yesno "\n$deluser_var" 10 60) then
                                if "$menu_enter" ; then
                                    arch-chroot "$CHROOT_MOUNT_POINT" userdel --remove "$user" &>/dev/null
                                fi
                                echo -e "${paswd}" > "$tmp_passwd"
                                break
                            else
                                echo -e "${paswd}\n${user}:${user_sh}:${sudo_user}:${full_user}:${pass_crypt}" > "$tmp_passwd"
                                break
                            fi
                        ;;
                        *)	if [ "$user" != "root" ]; then
                                echo -e "${paswd}\n${user}:${user_sh}:${sudo_user}:${full_user}:${pass_crypt}" > "$tmp_passwd"
                            fi
                            break
                        ;;
                    esac
                done
            ;;
        esac
    done